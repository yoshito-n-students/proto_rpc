cmake_minimum_required(VERSION 3.7)

# Name of this project
project(proto_rpc)

# Existing libraries this project uses
find_package(
    Boost REQUIRED
    program_options
    system
)
find_library(
    protobuf
    NAMES libprotobuf
    PATHS $ENV{PROTOBUF_LIBRARYDIR}
)

# Location of include files
include_directories(
    include
    ${Boost_INCLUDE_DIRS}
    $ENV{PROTOBUF_INCLUDEDIR}
    ${CMAKE_CURRENT_BINARY_DIR} # for files generated by protoc
)

# Location of library files
link_directories(
    ${Boost_LIBRARY_DIRS}
    $ENV{PROTOBUF_LIBRARYDIR}
)

# RPC (remote procedure call) library for generic serivces of protobuf2
add_custom_command(
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/include/proto_rpc/rpc_messages.hpp rpc_messages.pb.cc
    COMMAND protoc --cpp_out=${CMAKE_CURRENT_BINARY_DIR} rpc_messages.proto
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/rpc_messages.pb.h ${CMAKE_CURRENT_SOURCE_DIR}/include/proto_rpc/rpc_messages.hpp
    DEPENDS proto/rpc_messages.proto
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/proto
)
add_library(
    proto_rpc
    ${CMAKE_CURRENT_BINARY_DIR}/rpc_messages.pb.cc
)

# Example service library
add_custom_command(
    OUTPUT example_service.pb.h example_service.pb.cc
    COMMAND protoc --cpp_out=${CMAKE_CURRENT_BINARY_DIR} example_service.proto
    DEPENDS proto/example_service.proto
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/proto
)
add_library(
    example_service
    ${CMAKE_CURRENT_BINARY_DIR}/example_service.pb.cc
)

# Example executables
add_executable(
    example_server
    src/example_server.cpp
)
add_executable(
    example_client
    src/example_client.cpp
)

# Compile options
target_compile_options(
    example_server PRIVATE
    "/D_WIN32_WINNT=0x0501"
)
target_compile_options(
    example_client PRIVATE
    "/D_WIN32_WINNT=0x0501"
)

# Library dependences
target_link_libraries(
    proto_rpc
    ${protobuf}
)
target_link_libraries(
    example_service
    ${protobuf}
)
target_link_libraries(
    example_server
    proto_rpc
    example_service
)
target_link_libraries(
    example_client
    proto_rpc
    example_service
)